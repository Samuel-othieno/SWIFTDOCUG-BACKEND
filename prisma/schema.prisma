// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["relationJoins"]
}

datasource db {
  provider = "postgresql"
  url      = env("RENDER_DATABASE_URL")
}

model User {
  id                  Int              @id @default(autoincrement())
  username            String           @unique
  password            String
  email               String           @unique
  role                Role             @default(PATIENT)
  Profile             Profile?
  Medical_records     Medical_records?
  createdAt           DateTime         @default(now())
  updatedAt           DateTime         @updatedAt
  Prescriptions       Prescriptions[]
}

model Medical_records {
  id                 Int    @id @default(autoincrement())
  user               User   @relation(fields: [userId], references: [id], onUpdate: Cascade, onDelete: Cascade)
  userId             Int    @unique
  allergies          String
  medical_Conditions String
  immunizations      String
  family_history     String
}

model Profile {
  id            Int      @id @default(autoincrement())
  user          User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId        Int      @unique
  first_name    String
  last_name     String
  date_of_birth DateTime @default(now())
  gender        Sex      @default(PREFER_NOT_TO_SAY)
  nationality   String
  address       String
}

model Prescriptions {
  id             Int          @id @default(autoincrement())
  user           User         @relation(fields: [userId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  medication     String
  duration       String
  notes          String
  userId         Int
}

enum Role {
  ADMIN
  DOCTOR
  PATIENT
}

enum Sex {
  MALE
  FEMALE
  PREFER_NOT_TO_SAY
}
